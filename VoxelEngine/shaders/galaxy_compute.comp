#version 450
layout(local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

struct Star {
    vec3 position;
};

layout(std430, binding = 0) readonly buffer StarBufferIn {
    Star starsIn[];
};

layout(std430, binding = 1) writeonly buffer StarBufferOut {
    Star starsOut[];
};

void main() {
    uint index = gl_GlobalInvocationID.x;
    if (index >= 10) { // NUM_STARS
        return;
    }

    // Simply copy the input position to the output
    // This maintains the positions exactly as they were initialized
    starsOut[index].position = starsIn[index].position;
}
