#version 450
layout(local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

struct Star {
    vec3 position;
};

layout(std430, binding = 0) readonly buffer StarBufferIn {
    Star starsIn[];
};

layout(std430, binding = 1) buffer StarBufferOut {
    Star starsOut[];
};

void main() {
    uint index = gl_GlobalInvocationID.x;
    if (index >= 10) { // Hardcoded NUM_STARS for simplicity
        return;
    }

    float lineLength = 4.0;
    float spacing = lineLength / 9.0; // (NUM_STARS - 1)
    float xPos = (float(index) * spacing) - (lineLength / 2.0);

    starsOut[index].position = vec3(xPos, 0.0, 0.0);
}
