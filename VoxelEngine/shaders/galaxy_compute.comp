#version 450

layout(local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

struct Star {
    vec2 position;
    vec3 color;
    vec3 normal;
    vec2 uv;
};

// Global UBO (set = 0)
layout(set = 0, binding = 0) uniform GlobalUbo {
    mat4 projection;
    mat4 view;
    mat4 invView;
    vec4 ambientLightColor;
} ubo;

// Star buffer (set = 1)
layout(set = 1, binding = 0) buffer StarBuffer {
    Star stars[];
};

void main() {
    uint index = gl_GlobalInvocationID.x;
    if (index < stars.length()) {
        // Here you can modify star properties
        stars[index].position.x += 0.001; // Slowly move stars to the right
        stars[index].color = vec3(float(index) / float(stars.length()), 0.0, 1.0);
    }
}
